rpminspect-data-centos
======================

This package provides data files used by the rpminspect program on
CentOS and CentOS Stream.  Some defaults are provided by the software,
but the idea is that you will customize these files based on the
products you are making.


PACKAGING
---------

The rpminspect package builds the software and a data package called
rpminspect-data-generic.  This is a template package and is there so
that the output of the rpminspect.spec file is complete.  The generic
package does not contain anything vendor-specific.  The intent is for
the vendor to create their own data package to use in place of the
generic package.

The preferred way to do that is to create an rpminspect-data-VENDOR
package and add this to the spec file:

    Requires: rpminspect

rpminspect does not technically need an rpminspect-data-* package to
run.  They are just a convenient way to centralize vendor-specific
data used by rpminspect.  Care should be taken creating
vendor-specific data packages so they do not collide with other data
packages users may want installed.


RELEASING
---------

Make sure everything builds cleanly.  Then start from a clean tree:

    git clean -d -x -f

If you have not bumped the version number for the development release,
then do:

    make new-release

If you have already bumped the version number, then do:

    make release

You can compare the latest tag to the version number in meson.build to
see if you bumped it or not if you have forgotten.  For example:

    LATEST_VER="$(grep " version : " meson.build | cut -d "'" -f 2)"
    LATEST_TAG="$(git tag -l | cut -c2- | sort -n | tail -n 1)"

That's complicated, so I made it easier for you:

    make did-i-bumpver

If those two strings match, you did not bump the version number during
development so run 'make new-release'.  'make did-i-bumpver' will
report its findings too.

Now run:

    make srpm

Then go to GitLab and create a new release entry.  Paste the contents
of the 'changelog' file minus the first line for the description of
the release.  Bind the release to the tag you just made and call it
rpminspect-data-centos-VERSION.  Attached the tarball and detached asc
signature from the build/meson-dist/ subdirectory.

Lastly, do the builds in koji.  You can build for a subset of branches
by using the BRANCHES environment variable:

    env BRANCHES="f33 epel7" make koji

By default, 'make koji' will built for all branches present in the
project that have koji build targets.

Ensure you have a Fedora Kerberos ticket before doing this.
